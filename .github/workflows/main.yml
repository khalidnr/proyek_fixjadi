name: PHP Project CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-and-test"
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 1. Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up PHP environment
      # Uses a popular action to set up PHP with the specified version.
      # Your composer.json requires ^7.4 || ^8.0, so we use a modern 8.1 version.
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite # Add extensions your app needs
          coverage: none

      # 3. Install Composer dependencies
      # Caches dependencies to speed up future runs.
      # Runs 'composer install' to download the PHP libraries.
      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: "locked"

      # 4. Set up Node.js environment
      # Your project has a package.json, so this step sets up Node.js to install JS dependencies.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Using a recent LTS version of Node
          cache: 'npm'

      # 5. Install NPM dependencies
      # 'npm ci' is used for continuous integration as it's typically faster and more secure than 'npm install'.
      - name: Install NPM dependencies
        run: npm ci

      # 6. Run PHPUnit tests
      # This command executes the tests defined in your phpunit.xml configuration file.
      - name: Run tests
        run: ./vendor/bin/phpunit --configuration phpunit.xml

      # 7. (Optional) Compile assets if needed
      # If you have a build step for your CSS or JS, you can add it here.
      # For example:
      # - name: Compile assets
      #   run: npm run build